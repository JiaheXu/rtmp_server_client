#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;

events {
    worker_connections  1024;
}

# RTMP streaming configuration
rtmp {
    server {
        listen 1937;  # RTMP listen port
       # chunk_size 4096;
       # chunk_size 8512;
        chunk_size 8192;
        # Only affects clients downstream from this server:
        	# Higher Efficiency: Larger chunk sizes reduce the number of packets sent, leading to lower overhead
		# Stable Quality: On a reliable network, larger chunks can help maintain consistent streaming quality with less buffering.
		# Latency: While a larger chunk size slightly increases latency, it wonâ€™t be an issue in an Ethernet network where latency is naturally low.
       # chunk_size 16384;
        application live {
            live on;
            record off;

            # Re-stream the RTMP stream to a local RTSP endpoint
            #exec ffmpeg -i rtmp://localhost/live/stream -c:v copy -c:a copy -f rtsp rtsp://localhost:8554/live;

            # Re-stream the RTMP stream to another device on the network via RTSP
            #exec ffmpeg -i rtmp://localhost/live/stream -c:v copy -c:a copy -f rtsp rtsp://<REMOTE_DEVICE_IP>:8554/live;
            # Reduced latency by using low buffer options
            exec ffmpeg -fflags nobuffer -flags low_delay -i rtmp://localhost/live/stream \
                        -c:v copy -c:a copy -f rtsp rtsp://localhost:8554/live;

            # Stream to a remote device with low-latency settings
            #exec ffmpeg -fflags nobuffer -flags low_delay -i rtmp://localhost/live/stream \
                        #-c:v copy -c:a copy -f rtsp rtsp://<REMOTE_DEVICE_IP>:8554/live;

	 }
    }
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        listen       80;
        server_name  localhost;

        location / {
            root   html;
            index  index.html index.htm;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }

    # Status page for RTMP streams
    server {
        listen 8080;

        location /stat {
            rtmp_stat all;
            rtmp_stat_stylesheet stat.xsl;
        }

        location /stat.xsl {
            root /usr/local/nginx/html;
        }
    }

    # HTTPS server configuration placeholder (optional)
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}
}
